@page "/add-firewall-exception"
@using System.ComponentModel.DataAnnotations
@inject IFirewallExceptionService FirewallExceptionService
@using firewall_e.Models

<EditForm Model="@firewallException" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="sourceAddress">Source Address (CIDR):</label>
        <InputText id="sourceAddress" @bind-Value="firewallException.SourceAddress" />
        <ValidationMessage For="@(() => firewallException.SourceAddress)" />
    </div>

    <div>
        <label for="protocol">Protocol:</label>
        <InputSelect id="protocol" @bind-Value="firewallException.Protocol">
            <option value="http">HTTP</option>
            <option value="https">HTTPS</option>
        </InputSelect>
        <ValidationMessage For="@(() => firewallException.Protocol)" />
    </div>

    <div>
        <label for="fqdns">FQDNs (comma-separated):</label>
        <InputText id="fqdns" @bind-Value="firewallException.Fqdns" />
        <ValidationMessage For="@(() => firewallException.Fqdns)" />
    </div>

    <button type="submit">Submit</button>
</EditForm>

@code {
    private FirewallExceptionModel firewallException = new FirewallExceptionModel();

    private async Task HandleValidSubmit()
    {
        await FirewallExceptionService.SaveExceptionAsync(firewallException);
        Console.WriteLine("Form submitted and exception saved successfully!");
    }
}